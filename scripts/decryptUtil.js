const paillierBigint = require('paillier-bigint');
const fs = require('fs');

async function decryptTally(encryptedSumStrings) {
  const privData = JSON.parse(fs.readFileSync('private.json'));
  const publicKey = new paillierBigint.PublicKey(BigInt(privData.publicKey.n), BigInt(privData.publicKey.g));
  const privateKey = new paillierBigint.PrivateKey(
    BigInt(privData.lambda),
    BigInt(privData.mu),
    publicKey
  );

  for (let i = 0; i < encryptedSumStrings.length; i++) {
    const productParts = encryptedSumStrings[i].split("*");
    let total = 1n;
    const n2 = publicKey.n ** 2n;

    for (let part of productParts) {
      if (part.trim() === '') continue;
      total = (total * BigInt(part)) % n2;
    }

    const decrypted = await privateKey.decrypt(total);
    console.log(`🗳️ Candidate ${i} received ${decrypted} votes`);
  }
}

// Load encrypted strings manually from smart contract's encryptedSums for each candidate
// decryptTally([
//   "1*ENC1*ENC2", // Replace with actual values from getEncryptedSum(0)
//   "1*ENC3*ENC4",
//   "1*ENC5"
// ]);


decryptTally(
    [
      "1*217740369459153246302730148348379413813487195010539200591952200934913673266353708015040403319383071232227959811368493204063087477556270719542449594885873729910600579717958047620839110289110903797444013825762125260246188676756271600471663044700338973663497445960586377142348862222758091927433716110659757523931379538720991372337054998959405836383292860643905896051796830311304234785363186739165598942620649384609434680391696654065652980487601496022347556615704470124423049305587660719097872044606412997762574415058832409537253747185750764833730709014110124732749399305201014568279829050537971435317056308513883669990914619962882577280791612284479255155186729039697048629961108256478545270450770804745469722999197987883377142363997581513450386130736948184332461454681766332068538799577751523048379021976569344755839160392719799198474934702996613407343855771907988466131783545925579874032521999361937268066513405533548725025510779148481975601591651914704209198396065471893243408610951612229328776308149942097863359026315454243833541449986174636143308455175843821341005715668945581797779493347301990975270341989709490825601539793594908922567372215604483912742875532136409708117829815695837476310361497383734449639579341848640311057843575",
"1*267869076890151545036494357914755048658471186214768594825426701433693229814246874002353982296500921891733619013755615020439379023965444522155627402503365795561745977957195030000218990702978614378468977650061213999561460412966328137464861236039031361834644529549876322126357430443088904781573762230308024448469086309288388587571710552480264737319278685168692926926054593395420365747328218887125951333060614851043721389696946175910118928516176260595562244336263024730618861555889634708416955503430682200858221828036226486044463126707452588429386864365201402126651818533719327725390435303600621904010080328710836326781598561277755777140558346266453232885297676927372224303029500067907143309366107823714955721744376156582755708731456032069005141261948725930849820809209150408970324469274025678000033395175686542107094061719662051596056934001163119754018673188565379329575946161023468725789243227218617487825657767800100092804584384199653234902948170467823262158110591567612267529634889133188743772251994156637325561536087047044961569422866147303693753767757103070555120824501164472765920286217575698065495884130018237329705441829947633798383257911759571216710693619396452734317460719502043005542675832070906791569695043595594293628306445",
"1*91559509728184386509343903108504645777925926570680815831939849948124067956857981302720565486565902059504865519732771664846365634261957818375713041070778979117777862890205071293164174270530045477038342244552489608022217161068732145106839475926127474075892279680612486481014206307829969518143415552935728017685320361776393269670664560093767284610144171301531655718281908166871461080002612416147904567200876364350610071737600699341521750520943012346066631012413812787894877593668020025939748048532776068570976514988937909448051295184604987483070482753717676230076915043328496187103504545857371599376161320573887142520235617737298079124806665619036533629951426189971190097869422185597933838437604133448077205847800059516348732816140487637277829165610684834039395310556206047876440733707618706634958748636325775076176007941586828304519836472231425557691146504132247054586756702626876932624662376385030484798994757312587747259682575734545736364929963765465897338071886787204234128748604182802971603400646020455093187322623873029061015110674326615201366620263551070199282198890552250354772313177436087325390420020581382239153354715630614963456371267298179365080540111925696392495126203397734350176808581834107628176885057672761218052617940"

    ]
);






